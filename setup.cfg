[metadata]
name = neutron-classifier
summary =  Extension that provides a common framework for traffic classificataion
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5

[files]
packages =
    neutron_classifier

[entry_points]
neutronclient.extension=
    classification = neutron_classifier.cli.neutron_cli.classification
    ipv4-classification = neutron_classifier.cli.neutron_cli.ipv4_classification
openstack.neutronclient.v2 =
    classifier_create = neutron_classifier.cli.openstack_cli.classifier:CreateClassifier
    classifier_update = neutron_classifier.cli.openstack_cli.classifier:UpdateClassifier
    classifier_delete = neutron_classifier.cli.openstack_cli.classifier:DeleteClassifier
    classifier_list = neutron_classifier.cli.openstack_cli.classifier:ListClassifier
    classifier_show = neutron_classifier.cli.openstack_cli.classifier:ShowClassifier
neutron.service_plugins =
    neutron_classifier = neutron_classifier.services.classification.plugin:ClassificationPlugin
neutron.db.alembic_migrations =
    neutron-classifier = neutron_classifier.db.migration:alembic_migrations

[build_sphinx]
source-dir = doc/source
build-dir = doc/build
all_files = 1

[upload_sphinx]
upload-dir = doc/build/html

[compile_catalog]
directory = neutron_classifier/locale
domain = neutron_classifier

[update_catalog]
domain = neutron_classifier
output_dir = neutron_classifier/locale
input_file = neutron_classifier/locale/neutron-classifier.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = neutron_classifier/locale/neutron-classifier.pot
